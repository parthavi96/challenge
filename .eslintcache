[{"D:\\react\\divercity_challenge\\src\\index.js":"1","D:\\react\\divercity_challenge\\src\\App.js":"2","D:\\react\\divercity_challenge\\src\\reportWebVitals.js":"3","D:\\react\\divercity_challenge\\src\\pages\\login.js":"4","D:\\react\\divercity_challenge\\src\\pages\\register.js":"5","D:\\react\\divercity_challenge\\src\\pages\\home.js":"6","D:\\react\\divercity_challenge\\src\\context\\auth.js":"7"},{"size":500,"mtime":1611304180926,"results":"8","hashOfConfig":"9"},{"size":1468,"mtime":1611546446131,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1610424530690,"results":"11","hashOfConfig":"9"},{"size":3135,"mtime":1611546377067,"results":"12","hashOfConfig":"9"},{"size":3098,"mtime":1611520099476,"results":"13","hashOfConfig":"9"},{"size":3953,"mtime":1611546564806,"results":"14","hashOfConfig":"9"},{"size":166,"mtime":1611532137145,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"rs166",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\react\\divercity_challenge\\src\\index.js",[],["33","34"],"D:\\react\\divercity_challenge\\src\\App.js",[],"D:\\react\\divercity_challenge\\src\\reportWebVitals.js",[],"D:\\react\\divercity_challenge\\src\\pages\\login.js",["35"],"import React from 'react';\r\nimport \"./auth.css\";\r\n\r\nclass Login extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticates:false,\r\n            resData: '',\r\n            email: '',\r\n            pwd:'',\r\n        };\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    handleEmail(event){\r\n        this.setState({email: event.target.value})\r\n    }\r\n    handlePassword(event){\r\n        this.setState({pwd: event.target.value})\r\n    }\r\n    login(event) \r\n    {\r\n        let payload = {}\r\n        payload.username = this.state.email;\r\n        payload.password = this.state.pwd;\r\n\r\n       this.setState({\r\n           email:event.target.email,\r\n           pwd: event.target.pwd\r\n       })\r\n        fetch('https://divercity-test.herokuapp.com/login',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            alert(data.token)\r\n            this.setState({resData:data.token,\r\n            isAuthenticated:true});\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n            this.setState({\r\n                isAuthentication:false,\r\n                resData:'No Data From Server'\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n    render()\r\n    {\r\n        \r\n        return(\r\n            <div className=\"outer\">\r\n        <div className=\"inner\">\r\n                <form>\r\n                    <h3>Log in</h3>\r\n                    <div className=\"form-group\">\r\n                        <label>Email</label>\r\n                        <input type=\"email\" onChange={(event) => {this.handleEmail(event)}} className=\"form-control\" placeholder=\"Enter email\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password</label>\r\n                        <input type=\"password\" onChange={(event) => {this.handlePassword(event)}} className=\"form-control\" placeholder=\"Enter password\" />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n                        <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={event => this.login(event)} className=\"btn btn-dark btn-lg btn-block\">Sign in</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Forgot <a href=\"#\">password?</a>\r\n                </p>\r\n                </form>\r\n                </div>\r\n                </div>\r\n        )\r\n        // }\r\n        // else{\r\n        //     return(\r\n        //         <p>No data was returned. Error occured.</p>\r\n        //     )\r\n        // }\r\n    }\r\n}\r\nexport default Login;","D:\\react\\divercity_challenge\\src\\pages\\register.js",["36"],"import React from 'react';\r\nimport \"./auth.css\";\r\n\r\nclass Register extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isAuthenticates:false,\r\n            resData: '',\r\n            email: '',\r\n            pwd:'',\r\n            name:''\r\n        };\r\n        this.signUp = this.signUp.bind(this);\r\n    }\r\n\r\n    handleEmail(event){\r\n        this.setState({email: event.target.value})\r\n    }\r\n    handlePassword(event){\r\n        this.setState({pwd: event.target.value})\r\n    }\r\n    handleName(event){\r\n        this.setState({name: event.target.value})\r\n    }\r\n    \r\n    signUp(event)\r\n    {\r\n        let payload = {}\r\n        payload.username = this.state.email;\r\n        payload.password = this.state.pwd;\r\n        payload.name = this.state.name;\r\n\r\n        this.setState({\r\n            email:event.target.email,\r\n            pwd: event.target.pwd,\r\n            name:event.target.name\r\n        })\r\n\r\n        alert(payload.username)\r\n        alert(payload.password)\r\n        alert(payload.name)\r\n        fetch('https://divercity-test.herokuapp.com/register',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-type':'application/json'\r\n            },\r\n            body: JSON.stringify(payload)\r\n        })\r\n        .then(res=>res.json())\r\n        .then((data)=>{\r\n            console.log(data);\r\n            alert(data.message);\r\n            this.setState({resData:data.token,\r\n            isAuthenticated:true});\r\n        },\r\n        (error) => {\r\n            alert(error);\r\n            this.setState({\r\n                isAuthentication:false,\r\n                resData:'No Data From Server'\r\n            })\r\n        })\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"outer\">\r\n        <div className=\"inner\">\r\n            <form>\r\n                <h3>Register</h3>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Name</label>\r\n                    <input type=\"text\" onChange={(event) => {this.handleName(event)}} className=\"form-control\" placeholder=\"Enter Name\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Email</label>\r\n                    <input type=\"email\" onChange={(event) => {this.handleEmail(event)}} className=\"form-control\" placeholder=\"Enter email\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Password</label>\r\n                    <input type=\"password\" onChange={(event) => {this.handlePassword(event)}} className=\"form-control\" placeholder=\"Enter password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" onClick={event => this.signUp(event)} className=\"btn btn-dark btn-lg btn-block\">Register</button>\r\n                <p className=\"forgot-password text-right\">\r\n                    Already registered <a href=\"#\">log in?</a>\r\n                </p>\r\n            </form>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Register;\r\n","D:\\react\\divercity_challenge\\src\\pages\\home.js",["37","38","39","40","41","42","43","44","45","46"],"D:\\react\\divercity_challenge\\src\\context\\auth.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":84,"column":28,"nodeType":"53","endLine":84,"endColumn":40},{"ruleId":"51","severity":1,"message":"52","line":94,"column":40,"nodeType":"53","endLine":94,"endColumn":52},{"ruleId":"54","severity":1,"message":"55","line":25,"column":15,"nodeType":"56","messageId":"57","endLine":25,"endColumn":20},{"ruleId":"54","severity":1,"message":"58","line":27,"column":11,"nodeType":"56","messageId":"57","endLine":27,"endColumn":18},{"ruleId":"54","severity":1,"message":"59","line":37,"column":15,"nodeType":"56","messageId":"57","endLine":37,"endColumn":24},{"ruleId":"60","severity":1,"message":"61","line":103,"column":30,"nodeType":"62","messageId":"63","endLine":103,"endColumn":32},{"ruleId":"64","severity":1,"message":"65","line":104,"column":21,"nodeType":"66","messageId":"67","endLine":104,"endColumn":23},{"ruleId":"64","severity":1,"message":"65","line":104,"column":35,"nodeType":"66","messageId":"67","endLine":104,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":104,"column":53,"nodeType":"66","messageId":"67","endLine":104,"endColumn":55},{"ruleId":"64","severity":1,"message":"65","line":106,"column":38,"nodeType":"66","messageId":"67","endLine":106,"endColumn":40},{"ruleId":"64","severity":1,"message":"65","line":106,"column":62,"nodeType":"66","messageId":"67","endLine":106,"endColumn":64},{"ruleId":"64","severity":1,"message":"65","line":106,"column":89,"nodeType":"66","messageId":"67","endLine":106,"endColumn":91},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'skill' is assigned a value but never used.","Identifier","unusedVar","'payload' is assigned a value but never used.","'applydata' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]